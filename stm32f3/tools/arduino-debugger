#!/bin/bash
# File: arduino-debugger - upload and auto-launch debugger
# Desc: linux specific uploader and debugger using openocd and arm-none-eabi-gdb
#       note: this might work on Mac OS/X (not tested)
#
# Author: Rick Kimball
# 
#set -x
export ARG_CNT="$#"

if [ ${ARG_CNT} -lt 3 ]; then
  echo "usage: $0 [-d0|-d1] arduino_build_tmp_path sketch [no_upload]"
  echo " debug flag             - openocd debug flags [-d0 silent|-d1 verbose]"
  echo " arduino_build_tmp_path - the temp /tmp/arduino_build_nnnnn directory"
  echo " sketch                 - the sketch name .. Blink.ino"
  echo " [no_upload]            - optionally skip upload, just debug"
  echo " example:"
  echo "   $0 -d1 /tmp/arduino_build_433659 Blink.ino"
  exit 1
fi

export TOOLS_DIR=$(dirname $0)
export DEBUG_FLG=${1}
export BUILD_DIR=${2}
export SKETCH=${3}
export BIN_FILE=${BUILD_DIR}/${3}.bin
export HEX_FILE=${BUILD_DIR}/${3}.hex
export ELF_FILE=${BUILD_DIR}/${3}.elf

#-----------------------------------------------------------------------
# if you define OPENOCD_TARGET we use it, if not we default to stm32f3x.cfg
if [ -z ${OPENOCD_TARGET+x} ]; then
  export OPENOCD_TARGET=stm32f3x.cfg
fi

#--------------------------------------------------------------------------------
export OPENOCD_ARGS="-f interface/stlink.cfg -c 'transport select hla_swd' -f target/${OPENOCD_TARGET}"

export OPENOCD_LOG=${BUILD_DIR}/openocd.log

#----------------------------------------------------------------------------
# if openocd is hanging around, kill it
killall openocd >/dev/null 2>&1 

set -e # worry about errors and exit from now on

#----------------------------------------------------------------------------
cd "${BUILD_DIR}"

#----------------------------------------------------------------------------
# upload to the board using the .bin or .hex file 
if [ ${ARG_CNT} -eq 3 ]; then
  if [ -f ${BIN_FILE} ]; then
    openocd ${DEBUG_FLG} -f interface/stlink.cfg -f target/${OPENOCD_TARGET} \
            -c "program ${BIN_FILE} verify reset exit 0x08000000"
  else
    openocd ${DEBUG_FLG} -f interface/stlink.cfg -f target/${OPENOCD_TARGET} \
            -c "program ${HEX_FILE} verify reset exit"
  fi
else
  echo "skipping upload will use firmware already on flash" 
fi

#----------------------------------------------------------------------------
# start up the arm-none-eabi-gdb tui and wait for it to exit
xterm -geometry 100x60 -bg \#fffff0 -fg \#000000 \
       -fa "Ubuntu Mono" -fs 12 \
       -T 'Arduino Debugger' \
       -e arm-none-eabi-gdb \
       -n -q \
       -ex 'set print repeats 1024' \
       -ex 'set pagination off' \
       -ex 'set confirm off' \
       -ex 'set mem inaccesible-by-default off' \
       -ex "source ${TOOLS_DIR}/armv7m-vecstate.gdb" \
       -ex "target remote | openocd -c \"gdb_port pipe; log_output ${OPENOCD_LOG}\" ${OPENOCD_ARGS}"  \
       -ex 'mon reset init' \
       -ex 'tbreak setup' \
       -ex 'layout split' -ex 'winheight cmd 26' \
       -ex 'continue' \
       "${ELF_FILE}"

exit 0